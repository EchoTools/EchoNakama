# Nakama gRPC API.
server {
	listen 80;
	listen [::]:80;
	listen 443 ssl;
	listen [::]:443 ssl;

# Domain names this server should respond to.
	server_name nakama.echovrce.com echovrce.com;

# SSL certificate configuration.
	ssl_certificate         /etc/letsencrypt/live/nakama/fullchain.pem;
	ssl_certificate_key     /etc/letsencrypt/live/nakama/privkey.pem;
	ssl_trusted_certificate /etc/letsencrypt/live/nakama/chain.pem;
	ssl_dhparam /etc/letsencrypt/dhparams/dhparam.pem;

	location / {
		proxy_pass http://webapp:8080;
	}

}

server {
	listen 7349 ssl default_server;
	listen [::]:7349 ssl default_server;

# Domain names this server should respond to.
	server_name nakama0.eu-west.echovrce.com;

# SSL certificate configuration.
	ssl_certificate         /etc/letsencrypt/live/nakama/fullchain.pem;
	ssl_certificate_key     /etc/letsencrypt/live/nakama/privkey.pem;
	ssl_trusted_certificate /etc/letsencrypt/live/nakama/chain.pem;
	ssl_dhparam /etc/letsencrypt/dhparams/dhparam.pem;

	location / {
		proxy_pass http://nakama:7349;
	}
}


# Nakama admin console.
server {
	listen 7351 ssl default_server;
	listen [::]:7351 ssl default_server;

	server_name nakama0.eu-west.echovrce.com;

	ssl_certificate         /etc/letsencrypt/live/nakama/fullchain.pem;
	ssl_certificate_key     /etc/letsencrypt/live/nakama/privkey.pem;
	ssl_trusted_certificate /etc/letsencrypt/live/nakama/chain.pem;
	ssl_dhparam /etc/letsencrypt/dhparams/dhparam.pem;

	location / {
		proxy_pass http://nakama:7351;
	}

}


# Nakama HTTP API.
server {
	listen 7350 ssl default_server;
	listen [::]:7350 ssl default_server;

	server_name nakama0.eu-west.echovrce.com;

	ssl_certificate         /etc/letsencrypt/live/nakama/fullchain.pem;
	ssl_certificate_key     /etc/letsencrypt/live/nakama/privkey.pem;
	ssl_trusted_certificate /etc/letsencrypt/live/nakama/chain.pem;
	ssl_dhparam /etc/letsencrypt/dhparams/dhparam.pem;

	location / {
# Enable CORS from anywhere with support for pre-flight requests.
# See: https://enable-cors.org/server_nginx.html
		if ($request_method = 'OPTIONS') {
			add_header 'Access-Control-Allow-Origin' '*';
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
			add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
# Tell client that this pre-flight info is valid for 20 days
			add_header 'Access-Control-Max-Age' 1728000;
			add_header 'Content-Type' 'text/plain; charset=utf-8';
			add_header 'Content-Length' 0;
			return 204;
		}
		if ($request_method = 'POST') {
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
			add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
			add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
		}
		if ($request_method = 'GET') {
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
			add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
			add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
		}

		proxy_pass http://nakama:7350;
	}

	location /ws {
# Enable CORS from anywhere with support for pre-flight requests.
# See: https://enable-cors.org/server_nginx.html
		if ($request_method = 'OPTIONS') {
			add_header 'Access-Control-Allow-Origin' '*';
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
			add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
# Tell client that this pre-flight info is valid for 20 days
			add_header 'Access-Control-Max-Age' 1728000;
			add_header 'Content-Type' 'text/plain; charset=utf-8';
			add_header 'Content-Length' 0;
			return 204;
		}
		if ($request_method = 'POST') {
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
			add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
			add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
		}
		if ($request_method = 'GET') {
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
			add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
			add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
		}

		proxy_pass http://nakama:7350/ws;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "Upgrade";
	}
}

# vim: ft=nginx ss=2 ts=2 sw=2 et
