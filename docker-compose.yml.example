version: '3'
services:
  nakama:
    build: .
    restart: "unless-stopped"
    entrypoint:
      - "/bin/sh"
      - "-ecx"
      - >
          /nakama/nakama migrate up --database.address root@cockroachdb:26257 &&
          exec /nakama/nakama
          --name nakama1 --database.address root@cockroachdb:26257
          --session.token_expiry_sec 7200
          --metrics.prometheus_port 9100
          --config /nakama/data/local.yml
    links:
      - "cockroachdb:db"
    depends_on:
      cockroachdb:
        condition: service_healthy
      prometheus:
        condition: service_started
    expose:
      - "7349"
      - "7350"
      - "7351"
      - "9100"
    ports:
      # remove if using nginx
      - "7349:7349"
      - "7350:7350"
      - "7351:7351"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7350/"]
      interval: 10s
      timeout: 5s
      retries: 5

  echorelay:
    build: EchoRelay
    restart: "unless-stopped"
    entrypoint:
      - "/bin/sh"
      - "-ecx"
      - >
        exec dotnet EchoRelay.Cli.dll
        --port 6789
        --nakama-uri "http://nakama:7350/?server_key=1231232e-7222-40e0-b71e-454f5ef6ab42&relay_id=echorelay-1"
        --apikey 6be0434d8895a84dd22d8895a84dddb1efb0d969
        --enable-api
        --statsinterval 10000
        --verbose
    expose:
      - "6789"
    ports:
      - "6789"
    links:
      - nakama
    depends_on:
      nakama:
        condition: service_started

  cockroachdb:
    image: cockroachdb/cockroach:latest-v23.1
    restart: "unless-stopped"
    command: start-single-node --insecure --store=attrs=ssd,path=/var/lib/cockroach/
    volumes:
      - data:/var/lib/cockroach
    expose:
      - "8080"
      - "26257"
    ports:
      - "26257:26257"
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health?ready=1"]
      interval: 3s
      timeout: 3s
      retries: 5
  prometheus:
    image: prom/prometheus
    restart: "unless-stopped"
    entrypoint: /bin/sh -c
    command: |
      'sh -s <<EOF
        cat > ./prometheus.yml <<EON
      global:
        scrape_interval:     15s
        evaluation_interval: 15s

      scrape_configs:
        - job_name: prometheus
          static_configs:
          - targets: ['localhost:9090']

        - job_name: nakama
          metrics_path: /
          static_configs:
          - targets: ['nakama:9100']
      EON
      prometheus --config.file=./prometheus.yml
      EOF'
    ports:
      - '9090:9090'
  nginx:
    image: jonasal/nginx-certbot:latest
    restart: "unless-stopped"
    environment:
      # This will depend on your authenticator method.
      # see https://github.com/JonasAlfredsson/docker-nginx-certbot
      CERTBOT_EMAIL: "a@sprock.io"
      CERTBOT_AUTHENTICATOR: "dns-cloudflare"
    ports:
      - "80:80"
      - "443:443"
      - "7349:7349"
      - "7350:7350"
      - "7351:7351"
    volumes:
      - ./nginx_secrets:/etc/letsencrypt
      - ./nginx_conf.d:/etc/nginx/user_conf.d
    links:
      - nakama
    depends_on:
      nakama:
        condition: service_started
volumes:
  data:
